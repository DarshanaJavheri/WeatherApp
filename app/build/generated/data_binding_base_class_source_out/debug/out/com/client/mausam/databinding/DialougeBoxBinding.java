// Generated by view binder compiler. Do not edit!
package com.client.mausam.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.client.mausam.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialougeBoxBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView dlgCityAirPreassure;

  @NonNull
  public final ImageView dlgCityClose;

  @NonNull
  public final TextView dlgCityCloseTime;

  @NonNull
  public final TextView dlgCityCloud;

  @NonNull
  public final TextView dlgCityCondition;

  @NonNull
  public final ImageView dlgCityCurrImg;

  @NonNull
  public final TextView dlgCityGust;

  @NonNull
  public final TextView dlgCityHeatInd;

  @NonNull
  public final TextView dlgCityHumidity;

  @NonNull
  public final TextView dlgCityPrecip;

  @NonNull
  public final TextView dlgCityTemp;

  @NonNull
  public final TextView dlgCityUvIndex;

  @NonNull
  public final TextView dlgCityVisibility;

  @NonNull
  public final TextView dlgCityWindDegree;

  @NonNull
  public final TextView dlgCityWindDirection;

  @NonNull
  public final TextView dlgCityWindSpeed;

  @NonNull
  public final TextView dlgWillItRain;

  @NonNull
  public final TextView dlgWillItSnow;

  @NonNull
  public final LinearLayout largeContentLayout;

  @NonNull
  public final ScrollView scrollView;

  private DialougeBoxBinding(@NonNull LinearLayout rootView, @NonNull TextView dlgCityAirPreassure,
      @NonNull ImageView dlgCityClose, @NonNull TextView dlgCityCloseTime,
      @NonNull TextView dlgCityCloud, @NonNull TextView dlgCityCondition,
      @NonNull ImageView dlgCityCurrImg, @NonNull TextView dlgCityGust,
      @NonNull TextView dlgCityHeatInd, @NonNull TextView dlgCityHumidity,
      @NonNull TextView dlgCityPrecip, @NonNull TextView dlgCityTemp,
      @NonNull TextView dlgCityUvIndex, @NonNull TextView dlgCityVisibility,
      @NonNull TextView dlgCityWindDegree, @NonNull TextView dlgCityWindDirection,
      @NonNull TextView dlgCityWindSpeed, @NonNull TextView dlgWillItRain,
      @NonNull TextView dlgWillItSnow, @NonNull LinearLayout largeContentLayout,
      @NonNull ScrollView scrollView) {
    this.rootView = rootView;
    this.dlgCityAirPreassure = dlgCityAirPreassure;
    this.dlgCityClose = dlgCityClose;
    this.dlgCityCloseTime = dlgCityCloseTime;
    this.dlgCityCloud = dlgCityCloud;
    this.dlgCityCondition = dlgCityCondition;
    this.dlgCityCurrImg = dlgCityCurrImg;
    this.dlgCityGust = dlgCityGust;
    this.dlgCityHeatInd = dlgCityHeatInd;
    this.dlgCityHumidity = dlgCityHumidity;
    this.dlgCityPrecip = dlgCityPrecip;
    this.dlgCityTemp = dlgCityTemp;
    this.dlgCityUvIndex = dlgCityUvIndex;
    this.dlgCityVisibility = dlgCityVisibility;
    this.dlgCityWindDegree = dlgCityWindDegree;
    this.dlgCityWindDirection = dlgCityWindDirection;
    this.dlgCityWindSpeed = dlgCityWindSpeed;
    this.dlgWillItRain = dlgWillItRain;
    this.dlgWillItSnow = dlgWillItSnow;
    this.largeContentLayout = largeContentLayout;
    this.scrollView = scrollView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialougeBoxBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialougeBoxBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialouge_box, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialougeBoxBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dlg_city_air_preassure;
      TextView dlgCityAirPreassure = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityAirPreassure == null) {
        break missingId;
      }

      id = R.id.dlg_city_close;
      ImageView dlgCityClose = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityClose == null) {
        break missingId;
      }

      id = R.id.dlg_city_close_time;
      TextView dlgCityCloseTime = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityCloseTime == null) {
        break missingId;
      }

      id = R.id.dlg_city_cloud;
      TextView dlgCityCloud = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityCloud == null) {
        break missingId;
      }

      id = R.id.dlg_city_condition;
      TextView dlgCityCondition = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityCondition == null) {
        break missingId;
      }

      id = R.id.dlg_city_curr_img;
      ImageView dlgCityCurrImg = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityCurrImg == null) {
        break missingId;
      }

      id = R.id.dlg_city_gust;
      TextView dlgCityGust = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityGust == null) {
        break missingId;
      }

      id = R.id.dlg_city_heat_ind;
      TextView dlgCityHeatInd = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityHeatInd == null) {
        break missingId;
      }

      id = R.id.dlg_city_humidity;
      TextView dlgCityHumidity = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityHumidity == null) {
        break missingId;
      }

      id = R.id.dlg_city_precip;
      TextView dlgCityPrecip = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityPrecip == null) {
        break missingId;
      }

      id = R.id.dlg_city_Temp;
      TextView dlgCityTemp = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityTemp == null) {
        break missingId;
      }

      id = R.id.dlg_city_uv_index;
      TextView dlgCityUvIndex = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityUvIndex == null) {
        break missingId;
      }

      id = R.id.dlg_city_visibility;
      TextView dlgCityVisibility = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityVisibility == null) {
        break missingId;
      }

      id = R.id.dlg_city_wind_degree;
      TextView dlgCityWindDegree = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityWindDegree == null) {
        break missingId;
      }

      id = R.id.dlg_city_wind_direction;
      TextView dlgCityWindDirection = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityWindDirection == null) {
        break missingId;
      }

      id = R.id.dlg_city_wind_speed;
      TextView dlgCityWindSpeed = ViewBindings.findChildViewById(rootView, id);
      if (dlgCityWindSpeed == null) {
        break missingId;
      }

      id = R.id.dlg_will_it_rain;
      TextView dlgWillItRain = ViewBindings.findChildViewById(rootView, id);
      if (dlgWillItRain == null) {
        break missingId;
      }

      id = R.id.dlg_will_it_snow;
      TextView dlgWillItSnow = ViewBindings.findChildViewById(rootView, id);
      if (dlgWillItSnow == null) {
        break missingId;
      }

      id = R.id.large_content_layout;
      LinearLayout largeContentLayout = ViewBindings.findChildViewById(rootView, id);
      if (largeContentLayout == null) {
        break missingId;
      }

      id = R.id.scroll_view;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      return new DialougeBoxBinding((LinearLayout) rootView, dlgCityAirPreassure, dlgCityClose,
          dlgCityCloseTime, dlgCityCloud, dlgCityCondition, dlgCityCurrImg, dlgCityGust,
          dlgCityHeatInd, dlgCityHumidity, dlgCityPrecip, dlgCityTemp, dlgCityUvIndex,
          dlgCityVisibility, dlgCityWindDegree, dlgCityWindDirection, dlgCityWindSpeed,
          dlgWillItRain, dlgWillItSnow, largeContentLayout, scrollView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
