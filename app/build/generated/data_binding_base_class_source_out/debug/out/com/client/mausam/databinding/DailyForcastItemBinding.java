// Generated by view binder compiler. Do not edit!
package com.client.mausam.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.client.mausam.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DailyForcastItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final TextView dailyForecastItemCondition;

  @NonNull
  public final ImageView dailyForecastItemImg;

  @NonNull
  public final TextView dailyForecastItemTemp;

  @NonNull
  public final TextView dailyForecastItemTime;

  private DailyForcastItemBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull TextView dailyForecastItemCondition, @NonNull ImageView dailyForecastItemImg,
      @NonNull TextView dailyForecastItemTemp, @NonNull TextView dailyForecastItemTime) {
    this.rootView = rootView;
    this.dailyForecastItemCondition = dailyForecastItemCondition;
    this.dailyForecastItemImg = dailyForecastItemImg;
    this.dailyForecastItemTemp = dailyForecastItemTemp;
    this.dailyForecastItemTime = dailyForecastItemTime;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static DailyForcastItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DailyForcastItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.daily_forcast_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DailyForcastItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.daily_forecast_item_condition;
      TextView dailyForecastItemCondition = ViewBindings.findChildViewById(rootView, id);
      if (dailyForecastItemCondition == null) {
        break missingId;
      }

      id = R.id.daily_forecast_item_img;
      ImageView dailyForecastItemImg = ViewBindings.findChildViewById(rootView, id);
      if (dailyForecastItemImg == null) {
        break missingId;
      }

      id = R.id.daily_forecast_item_temp;
      TextView dailyForecastItemTemp = ViewBindings.findChildViewById(rootView, id);
      if (dailyForecastItemTemp == null) {
        break missingId;
      }

      id = R.id.daily_forecast_item_time;
      TextView dailyForecastItemTime = ViewBindings.findChildViewById(rootView, id);
      if (dailyForecastItemTime == null) {
        break missingId;
      }

      return new DailyForcastItemBinding((LinearLayoutCompat) rootView, dailyForecastItemCondition,
          dailyForecastItemImg, dailyForecastItemTemp, dailyForecastItemTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
