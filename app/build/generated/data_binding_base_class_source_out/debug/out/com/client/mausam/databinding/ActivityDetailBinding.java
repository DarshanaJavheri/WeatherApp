// Generated by view binder compiler. Do not edit!
package com.client.mausam.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.client.mausam.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextView cityCondition;

  @NonNull
  public final TextView cityTemp;

  @NonNull
  public final AppBarLayout detailAcAppbar;

  @NonNull
  public final CollapsingToolbarLayout detailAcCollapsing;

  @NonNull
  public final TextView detailCityAirPreassure;

  @NonNull
  public final TextView detailCityCloud;

  @NonNull
  public final TextView detailCityCountry;

  @NonNull
  public final ImageView detailCityCurrImg;

  @NonNull
  public final TextView detailCityHumidity;

  @NonNull
  public final TextView detailCityLastUpdated;

  @NonNull
  public final TextView detailCityMoonIllumination;

  @NonNull
  public final TextView detailCityMoonPhase;

  @NonNull
  public final TextView detailCityMoonrise;

  @NonNull
  public final TextView detailCityMoonset;

  @NonNull
  public final RecyclerView detailCityOvtommRecyclerview;

  @NonNull
  public final TextView detailCityPrecip;

  @NonNull
  public final RecyclerView detailCityRecyclerview;

  @NonNull
  public final TextView detailCitySunrise;

  @NonNull
  public final TextView detailCitySunset;

  @NonNull
  public final RecyclerView detailCityTommRecyclerview;

  @NonNull
  public final TextView detailCityUvIndex;

  @NonNull
  public final TextView detailCityVisibility;

  @NonNull
  public final TextView detailCityWindDegree;

  @NonNull
  public final TextView detailCityWindDirection;

  @NonNull
  public final TextView detailCityWindSpeed;

  private ActivityDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextView cityCondition, @NonNull TextView cityTemp,
      @NonNull AppBarLayout detailAcAppbar, @NonNull CollapsingToolbarLayout detailAcCollapsing,
      @NonNull TextView detailCityAirPreassure, @NonNull TextView detailCityCloud,
      @NonNull TextView detailCityCountry, @NonNull ImageView detailCityCurrImg,
      @NonNull TextView detailCityHumidity, @NonNull TextView detailCityLastUpdated,
      @NonNull TextView detailCityMoonIllumination, @NonNull TextView detailCityMoonPhase,
      @NonNull TextView detailCityMoonrise, @NonNull TextView detailCityMoonset,
      @NonNull RecyclerView detailCityOvtommRecyclerview, @NonNull TextView detailCityPrecip,
      @NonNull RecyclerView detailCityRecyclerview, @NonNull TextView detailCitySunrise,
      @NonNull TextView detailCitySunset, @NonNull RecyclerView detailCityTommRecyclerview,
      @NonNull TextView detailCityUvIndex, @NonNull TextView detailCityVisibility,
      @NonNull TextView detailCityWindDegree, @NonNull TextView detailCityWindDirection,
      @NonNull TextView detailCityWindSpeed) {
    this.rootView = rootView;
    this.cityCondition = cityCondition;
    this.cityTemp = cityTemp;
    this.detailAcAppbar = detailAcAppbar;
    this.detailAcCollapsing = detailAcCollapsing;
    this.detailCityAirPreassure = detailCityAirPreassure;
    this.detailCityCloud = detailCityCloud;
    this.detailCityCountry = detailCityCountry;
    this.detailCityCurrImg = detailCityCurrImg;
    this.detailCityHumidity = detailCityHumidity;
    this.detailCityLastUpdated = detailCityLastUpdated;
    this.detailCityMoonIllumination = detailCityMoonIllumination;
    this.detailCityMoonPhase = detailCityMoonPhase;
    this.detailCityMoonrise = detailCityMoonrise;
    this.detailCityMoonset = detailCityMoonset;
    this.detailCityOvtommRecyclerview = detailCityOvtommRecyclerview;
    this.detailCityPrecip = detailCityPrecip;
    this.detailCityRecyclerview = detailCityRecyclerview;
    this.detailCitySunrise = detailCitySunrise;
    this.detailCitySunset = detailCitySunset;
    this.detailCityTommRecyclerview = detailCityTommRecyclerview;
    this.detailCityUvIndex = detailCityUvIndex;
    this.detailCityVisibility = detailCityVisibility;
    this.detailCityWindDegree = detailCityWindDegree;
    this.detailCityWindDirection = detailCityWindDirection;
    this.detailCityWindSpeed = detailCityWindSpeed;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.city_condition;
      TextView cityCondition = ViewBindings.findChildViewById(rootView, id);
      if (cityCondition == null) {
        break missingId;
      }

      id = R.id.city_Temp;
      TextView cityTemp = ViewBindings.findChildViewById(rootView, id);
      if (cityTemp == null) {
        break missingId;
      }

      id = R.id.detailAc_appbar;
      AppBarLayout detailAcAppbar = ViewBindings.findChildViewById(rootView, id);
      if (detailAcAppbar == null) {
        break missingId;
      }

      id = R.id.detailAc_collapsing;
      CollapsingToolbarLayout detailAcCollapsing = ViewBindings.findChildViewById(rootView, id);
      if (detailAcCollapsing == null) {
        break missingId;
      }

      id = R.id.detail_city_air_preassure;
      TextView detailCityAirPreassure = ViewBindings.findChildViewById(rootView, id);
      if (detailCityAirPreassure == null) {
        break missingId;
      }

      id = R.id.detail_city_cloud;
      TextView detailCityCloud = ViewBindings.findChildViewById(rootView, id);
      if (detailCityCloud == null) {
        break missingId;
      }

      id = R.id.detail_city_country;
      TextView detailCityCountry = ViewBindings.findChildViewById(rootView, id);
      if (detailCityCountry == null) {
        break missingId;
      }

      id = R.id.detail_city_curr_img;
      ImageView detailCityCurrImg = ViewBindings.findChildViewById(rootView, id);
      if (detailCityCurrImg == null) {
        break missingId;
      }

      id = R.id.detail_city_humidity;
      TextView detailCityHumidity = ViewBindings.findChildViewById(rootView, id);
      if (detailCityHumidity == null) {
        break missingId;
      }

      id = R.id.detail_city_last_updated;
      TextView detailCityLastUpdated = ViewBindings.findChildViewById(rootView, id);
      if (detailCityLastUpdated == null) {
        break missingId;
      }

      id = R.id.detail_city_moon_illumination;
      TextView detailCityMoonIllumination = ViewBindings.findChildViewById(rootView, id);
      if (detailCityMoonIllumination == null) {
        break missingId;
      }

      id = R.id.detail_city_moon_phase;
      TextView detailCityMoonPhase = ViewBindings.findChildViewById(rootView, id);
      if (detailCityMoonPhase == null) {
        break missingId;
      }

      id = R.id.detail_city_moonrise;
      TextView detailCityMoonrise = ViewBindings.findChildViewById(rootView, id);
      if (detailCityMoonrise == null) {
        break missingId;
      }

      id = R.id.detail_city_moonset;
      TextView detailCityMoonset = ViewBindings.findChildViewById(rootView, id);
      if (detailCityMoonset == null) {
        break missingId;
      }

      id = R.id.detail_city_ovtomm_recyclerview;
      RecyclerView detailCityOvtommRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (detailCityOvtommRecyclerview == null) {
        break missingId;
      }

      id = R.id.detail_city_precip;
      TextView detailCityPrecip = ViewBindings.findChildViewById(rootView, id);
      if (detailCityPrecip == null) {
        break missingId;
      }

      id = R.id.detail_city_recyclerview;
      RecyclerView detailCityRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (detailCityRecyclerview == null) {
        break missingId;
      }

      id = R.id.detail_city_sunrise;
      TextView detailCitySunrise = ViewBindings.findChildViewById(rootView, id);
      if (detailCitySunrise == null) {
        break missingId;
      }

      id = R.id.detail_city_sunset;
      TextView detailCitySunset = ViewBindings.findChildViewById(rootView, id);
      if (detailCitySunset == null) {
        break missingId;
      }

      id = R.id.detail_city_tomm_recyclerview;
      RecyclerView detailCityTommRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (detailCityTommRecyclerview == null) {
        break missingId;
      }

      id = R.id.detail_city_uv_index;
      TextView detailCityUvIndex = ViewBindings.findChildViewById(rootView, id);
      if (detailCityUvIndex == null) {
        break missingId;
      }

      id = R.id.detail_city_visibility;
      TextView detailCityVisibility = ViewBindings.findChildViewById(rootView, id);
      if (detailCityVisibility == null) {
        break missingId;
      }

      id = R.id.detail_city_wind_degree;
      TextView detailCityWindDegree = ViewBindings.findChildViewById(rootView, id);
      if (detailCityWindDegree == null) {
        break missingId;
      }

      id = R.id.detail_city_wind_direction;
      TextView detailCityWindDirection = ViewBindings.findChildViewById(rootView, id);
      if (detailCityWindDirection == null) {
        break missingId;
      }

      id = R.id.detail_city_wind_speed;
      TextView detailCityWindSpeed = ViewBindings.findChildViewById(rootView, id);
      if (detailCityWindSpeed == null) {
        break missingId;
      }

      return new ActivityDetailBinding((CoordinatorLayout) rootView, cityCondition, cityTemp,
          detailAcAppbar, detailAcCollapsing, detailCityAirPreassure, detailCityCloud,
          detailCityCountry, detailCityCurrImg, detailCityHumidity, detailCityLastUpdated,
          detailCityMoonIllumination, detailCityMoonPhase, detailCityMoonrise, detailCityMoonset,
          detailCityOvtommRecyclerview, detailCityPrecip, detailCityRecyclerview, detailCitySunrise,
          detailCitySunset, detailCityTommRecyclerview, detailCityUvIndex, detailCityVisibility,
          detailCityWindDegree, detailCityWindDirection, detailCityWindSpeed);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
